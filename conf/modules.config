/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

    publishDir = [
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]

    withName: SAMPLESHEET_CHECK {
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: CUSTOM_DUMPSOFTWAREVERSIONS {
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: params.publish_dir_mode,
            pattern: '*_versions.yml'
        ]
    }
}

// PCGR/CPSR

def mode = params.mode.toLowerCase()

if(mode == 'pcgr'){
    process{
        withName: PCGR {
            ext.genome   = { params.genome.toLowerCase() }
            ext.database = { params.database }
            ext.args     = [ "",
                params.panel_id    ? "--panel_id ${params.panel_id}" : "",
                "--no_docker",   // would like to configure this with workflowcontainerengine == 'docker'
            ].join(" ").trim()
        }
    }
}

if(mode == 'cpsr'){
    process{
        withName: PCGR {
            ext.genome   = { params.genome.toLowerCase() }
            ext.database = { params.database }
            ext.args     = [
                "--panel_id ${params.panel_id}",
                "--no_docker",
            ].join("\n").trim()
        }
    }
}


